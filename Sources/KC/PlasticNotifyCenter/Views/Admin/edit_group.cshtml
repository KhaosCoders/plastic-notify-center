@{
    ViewData["Title"] = "Edit Group";
}
@using PlasticNotifyCenter.Models
@model EditGroupViewModel


<div class="container">
    <div class="row">
        <h1 class="display-3">
            @(Model.IsNewRole ? "New Group" : "Edit Group: "+Model.Role.NormalizedName)
        </h1>
    </div>
    <hr class="my-4">
    <div class="row">
        <form class="needs-validation w-100" asp-area="" asp-controller="Admin" asp-action="Group" asp-route-id="@(Model.IsNewRole ? "" : Model.Role.Id)" method="post" novalidate>
            <div class="form-group text-left row">
                <label for="groupName" class="col-sm-2 col-form-label">Name</label>
                <div class="col-sm-10">
                    <input type="text" class="form-control" id="groupName" name="name" aria-describedby="groupNameHelp"
                        placeholder="Enter a name for this group" required value="@Model.Role.Name"
                        @(Model.Role.IsBuildIn ? "readonly" : "")>
                    <small id="groupNameHelp" class="form-text text-muted">The name of the group.</small>
                    <div id="groupNameValidator" style="display: none;"></div>
                </div>
            </div>
            <div class="form-group text-left row">
                <label class="col-sm-2 col-form-labeld">Users</label>
                <div class="col-sm-10">
                    <select multiple="multiple" class="form-control" id="groupUsers" name="users">
                        @foreach(var user in Model.UsersInRole)
                        {
                        <option value="@user.Id" selected>@user.UserName</option>
                        }
                        @foreach(var user in Model.UserNotInRole)
                        {
                        <option value="@user.Id">@user.UserName</option>
                        }
                    </select>
                </div>
            </div>
            <div class="form-group text-left row">
                <div class="col-sm-12 text-center">
                    <button class="btn btn-primary" type="submit">@(Model.IsNewRole ? "Create" : "Save")</button>
                </div>
            </div>
        </form>
    </div>
</div>
@section scripts {
    <script src="~/js/jquery.quicksearch.js" asp-append-version="true"></script>
    <script src="~/js/jquery.multi-select.js" asp-append-version="true"></script>
    <script type="text/javascript">
    <!--
        $('#groupUsers').multiSelect({
            selectableHeader: "<p>Available</p><div><input type='text' class='list-search-input' autocomplete='off' placeholder='Search...' novalidate></div>",
            selectionHeader: "<p>Active</p><div><input type='text' class='list-search-input' autocomplete='off' placeholder='Search...' novalidate></div>",
            cssClass: "list-form-control",
            afterInit: function(ms){
                var that = this,
                    $selectableSearch = that.$selectableUl.prev().children("input"),
                    $selectionSearch = that.$selectionUl.prev().children("input"),
                    selectableSearchString = '#'+that.$container.attr('id')+' .ms-elem-selectable:not(.ms-selected)',
                    selectionSearchString = '#'+that.$container.attr('id')+' .ms-elem-selection.ms-selected';
                that.qs1 = $selectableSearch.quicksearch(selectableSearchString)
                .on('keydown', function(e){
                    if (e.which === 40){
                        that.$selectableUl.focus();
                        return false;
                    }
                });
                that.qs2 = $selectionSearch.quicksearch(selectionSearchString)
                .on('keydown', function(e){
                    if (e.which == 40){
                        that.$selectionUl.focus();
                        return false;
                    }
                });
            },
            afterSelect: function(){
                this.qs1.cache();
                this.qs2.cache();
            },
            afterDeselect: function(){
                this.qs1.cache();
                this.qs2.cache();
            }
        });
    -->
    </script>
}
@section links {
    <link rel="stylesheet" href="~/css/multi-select.dist.css" />
}